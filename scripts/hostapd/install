#!/usr/bin/env bash

set -e

cat <<'EOF' > /etc/systemd/network/95-wlan-hostap.link
# make the wlan devices for hostap match "*hostap.link"
# By default, all wlan interfaces will be access points
[Match]
Type=wlan

[Link]
NamePolicy=kernel database
MACAddressPolicy=persistent

# this section gets appended to the hostap conf, overwriting any default
# values from the template
[hostapd]
ssid=test2
wpa_passphrase=bbbbbbbb
EOF

cat <<'EOF' > /etc/systemd/network/95-wlan-hostap.network
# By default, all wlan interfaces will be access points
[Match]
Type=wlan

[Network]
DHCPServer=yes
LLMNR=true
MulticastDNS=true
LLDP=true
EmitLLDP=true
Address=0.0.0.0/24
IPForward=true
IPMasquerade=true
EOF

cat <<'EOF' > /etc/udev/rules.d/50-hostapd.rules
# Copyright (C) 2017 Hamish Coleman <hamish@zot.org>
#
# any wlan device with a *hostap.link file will get a hostapd running

SUBSYSTEM!="net", GOTO="hostapd_end"
ACTION!="add", GOTO="hostapd_end"

IMPORT{builtin}="net_setup_link"

ENV{ID_NET_LINK_FILE}=="*hostap.link", \
    TAG+="systemd", ENV{SYSTEMD_WANTS}="hostapd@%k.service", \
    PROGRAM="/usr/local/sbin/hostapd.template %k %E{ID_NET_LINK_FILE}"

LABEL="hostapd_end"
EOF


cat <<'EOF' >/etc/hostapd/hostapd.template.conf
# This is currently a bunch of settings that appear to me to be sane defaults,
# without a huge amount of thought gone into them
#
# TODO
# - reduce this file as much as possible
#

# FIXME - hardcoded with a poor ssid/psk
logger_syslog=-1
logger_syslog_level=2
logger_stdout=-1
logger_stdout_level=2
ctrl_interface=/var/run/hostapd
ctrl_interface_group=0
ieee80211d=1
ieee80211h=1
hw_mode=g
max_num_sta=32
rts_threshold=2347
fragm_threshold=2346
macaddr_acl=0
auth_algs=3

wme_enabled=1
ieee80211n=1
wpa=2
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP

country_code=GB
interface=__INTERFACE__
channel=1
ssid=test
wpa_passphrase=aaaaaaaa
EOF

cat <<'EOF' >/usr/local/sbin/hostapd.template
#!/bin/sh
# Copyright (C) 2017 Hamish Coleman <hamish@zot.org>

#
# Called from udev with the name of a wireless interface.  Checks if
# there is a hostap config for it already, and if not, builds one from
# the template
#
# TODO
# - now that we can append config from the link file, do we want to just
#   overwrite the conf file every time?
# - or, perhaps, move the config file location to /run and use a per-interface
#   template (hostapd.template.%I.conf ?) if it is found

INT="$1"
LINK="$2"

CONF="hostapd.${INT}.conf"
TEMPLATE="hostapd.template.conf"

if [ -z "$INT" ]; then
    echo error - need interface name
    exit 1
fi

DIR=/etc/hostapd

cd "$DIR"

if [ -e "$CONF" ]; then
    # nothing needs doing
    exit 0
fi

if [ ! -e "$TEMPLATE" ]; then
    echo error - need a $TEMPLATE
    exit 1
fi

sed -e "s/__INTERFACE__/$INT/g" <$TEMPLATE >$CONF

if [ -e "$LINK" ]; then
    # if we know the name of the *.link file, append any extra
    # config items from there
    confget -f $LINK -s hostapd -l >>$CONF
fi
EOF
chmod +x /usr/local/sbin/hostapd.template

cat<<'EOF' > /etc/systemd/system/hostapd\@.service  
# Copyright (C) 2017 Hamish Coleman <hamish@zot.org>

# FIXME - removing the device does not kill off the hostapd, which means that
# replugging it doesnt work
[Unit]
Description=Software Wireless Access point on %I
After=sys-subsystem-net-devices-%i.device
BindsTo=sys-subsystem-net-devices-%i.device

[Service]
Restart=always
RestartSec=1
ExecStart=/usr/sbin/hostapd /etc/hostapd/hostapd.%I.conf
ExecReload=/bin/kill -HUP $MAINPID
ExecStop=/bin/kill $MAINPID

[Install]
WantedBy=multi-user.target sys-subsystem-net-devices-%I.device
DefaultInstance=wlan0
EOF
