#!/bin/bash

dialog="dialog --ascii-lines --backtitle 'TOMesh Prototype Node' "

additionalParam="--ascii-lines "
#sudo apt-get install -y $dialog

interfaces=$(ls /sys/class/net/)

# Check Interface Mesh Capabilty
function checkMesh
{
        phy=$(ihttps://raw.githubusercontent.com/tomeshnet/prototype-cjdns-pi/configFile/scripts/mesh-point/mesh.configw dev | grep -B1 $intSelected | head -n1 | tr -d "#")
        if [ -z "$(iw phy $phy info | grep 'mesh point')" ]; then
                echo "0"
        elif [ "$(basename $(readlink /sys/class/net/$intSelected/device/driver))" == 'xradio_wlan' ]; then
                echo "0"
        else
                echo "1"
        fi
}

# Remove section from config file
function removeSection()
{
    local res=""
    while read -r line
    do

        if [[ "$line" != "$1" ]]; then
            res="$res\n[$line]"

            while read -r line2
            do
                res="$res\n$line2"
            done < <(confget -f /etc/mesh.conf  -s $line -l)

        fi
    done < <(cat /etc/mesh.conf  | grep "\[" | awk -F "\[" '{print $2}' | awk -F "\]" '{print $1}')
    echo -e $res >/etc/mesh.conf
}

# Get MAC address of interface
function getMAC()
{
    if [[  $1 != '' ]]; then
        cat /sys/class/net/$1/address | tr -d '\n'
    fi
}

# Main menu - Select Interface
function MainMenu() {

    list=""
    for interface in $interfaces; do
        if [[ ! $interface == 'lo' ]] && [[ ! $interface == 'tun0' ]] && [[ ! $interface == 'br-enter' ]];  then
            mac=$(getMAC $interface)
            type=$(confget -f /etc/mesh.conf -s $mac type)
             if [[ ! -z "$mac" ]]; then
                list="$list $interface '$mac $type'"
            fi
        fi
    done
    list="$list 'cjdns CJDNS\ Configuration'"
    eval "$dialog --menu 'Select interface to configure' 20 51 19 $list"  2> /tmp/res
    intSelected=$(cat /tmp/res)
    rm -rf /tmp/res
}

function SelectType() {
    if [[ -f  "$(iwconfig $intSelected | grep 'no wireless extensions')" ]]; then
        eval "$dialog --menu 'Set Interface Type ' 20 51 19 none NONE exit Internet\ Access enter Gateway\ to\ Hyperborea"  2>/tmp/res
    else
        eval "$dialog --menu 'Set Interface Type ' 20 51 19 none NONE ap AP mesh MESH"  2>/tmp/res        
    fi
    intType=$(cat /tmp/res)
    rm -rf /tmp/res
}

# Get SSID Information
function GetSSID() {
    intSSID=$(confget -f /etc/mesh.conf -s $selectedMac ssid)
    if [[ "$intSSID" == "" ]]; then
        intSSID="tomesh"
    fi
    eval "$dialog --inputbox 'SSID $(intSelected)' 20 51 $intSSID"  2>/tmp/res
    intSSID=$(cat /tmp/res)
    rm -rf /tmp/res
}

function GetMeshProtocol() {
    intProtocol=$(confget -f /etc/mesh.conf -s $selectedMac protocol)
    list="";

   if [[ "$(checkMesh)" == '0' ]]; then
        list="adhoc AdHoc on"
   elif [[ $intProtocol == '80211s' ]]; then
        list="80211s 802.11s on adhoc AdHoc off"
    else
        list="80211s 802.11s off adhoc AdHoc on"
    fi

    eval "$dialog --radiolist 'Mesh Protocol' 20 51 4 $list "  2>/tmp/res
    intProtocol=$(cat /tmp/res)

}

# Get Frequency for interface
function GetFrequency() {
    intFreq=$(confget -f /etc/mesh.conf -s $selectedMac freq)

    list=""
    while read -r line
    do      
        clean=$(echo $line | tr -d '.')
        list="$list $clean '$line Ghz'"
        if [[ "$intFreq" == "$clean" ]]; then
            list="$list on"
        else
            list="$list off"
        fi
    done < <(iwlist $intSelected frequency | grep Channel | awk '{print $4'})

    eval "$dialog --radiolist 'Frequency' 20 51 10 $list "  2>/tmp/res
    intFreq=$(cat /tmp/res)
}

# Get Channel for interface
function GetChannel() {
    intChan=$(confget -f /etc/mesh.conf -s $selectedMac chan)
    list=""
    while read -r line
    do
        clean=$(echo $line)
        list="$list $clean 'Chan $line'"
        if [[ "$intChan" == "$clean" ]]; then
            list="$list on"

        else
            list="$list off"

        fi
    done < <(iwlist $intSelected frequency | grep Channel | awk '{print $2'})

    eval "$dialog --radiolist 'Channel' 20 51 10 $list "  2>/tmp/res
    intChan=$(cat /tmp/res)
    rm -f /tmp/res
}

# Get Encryption TypeGet
function GetWPA() {
    intWPA=$(confget -f /etc/mesh.conf -s $selectedMac wpa)
    list=""

    list="$list  none 'No Encryption - Public'"
    if [[ "$intWPA" == "none" ]]; then
        list="$list on"
    else
        list="$list off"
    fi

    list="$list  wpa-psk 'Password Only'"
    if [[ "$intWPA" == "wpa-psk" ]]; then
        list="$list on"
    else
        list="$list off"
    fi

    list="$list wpa-eap 'Login/Password'"
    if [[ "$intWPA" == "wpa-eap" ]]; then
        list="$list on"
    else
        list="$list off"
    fi

    eval "$dialog --radiolist 'Encryption Type' 20 51 10 $list "  2>/tmp/res
    intWPA=$(cat /tmp/res)
    rm -f /tmp/res
}

function GetWPAPassword() {
    while [ "${#intWPAPass}" -lt 8 ] || [ "${#intWPAPass}" -gt 63 ]; do
        if [[ "$intWPAPass" == "" ]]; then
            intWPAPass=$(confget -f /etc/mesh.conf -s $selectedMac wpapass)
        fi
        eval "$dialog --inputbox 'WPA Password  (8-63 characters)' 20 51 $intWPAPass "  2>/tmp/res
        intWPAPass=$(cat /tmp/res)
    done
    rm -rf /tmp/res
}


MainMenu
selectedMac=$(getMAC $intSelected)
SelectType

if [ "$intType" == "exit" ]; then
        echo "Not Complete"
fi

if [ "$intType" == "enter" ]; then
        echo "Not Complete"
fi

if [ "$intType" == "mesh" ]; then
        GetSSID
        GetMeshProtocol
        GetFrequency
        mac=$(getMAC $intSelected)
        removeSection $selectedMac

        echo \[$selectedMac\] >> /etc/mesh.conf
        echo type=$intType  >> /etc/mesh.conf
        echo ssid=$intSSID  >> /etc/mesh.conf
        echo freq=$intFreq   >> /etc/mesh.conf
        echo protocol=$intProtocol  >> /etc/mesh.conf
fi

if [[ "$intType" == "ap" ]]; then
    GetChannel
    GetSSID
    GetWPA
    if [[ ! "$intWPA" == "none" ]]; then
        GetWPAPassword
    fi

    removeSection $selectedMac

    echo \[$selectedMac\] >> /etc/mesh.conf
    echo type=$intType >> /etc/mesh.conf
    echo ssid=$intSSID >> /etc/mesh.conf
    echo chan=$intChan >> /etc/mesh.conf
    echo wpa=$intWPA >> /etc/mesh.conf
    echo wpapass=$intWPAPass >> /etc/mesh.conf
fi
