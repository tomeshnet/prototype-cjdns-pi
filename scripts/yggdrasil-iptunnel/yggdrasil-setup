#!/usr/bin/env bash

# Enable forwarding for ipv4 and ipv6
echo 1 > /proc/sys/net/ipv4/ip_forward
echo 1 > /proc/sys/net/ipv6/conf/all/forwarding

# Give yggdrasil enough time to create an ygg0 interface before we start adding routes
sleep 3

LOCAL_YGG=$(sudo yggdrasilctl getSelf | grep IPv6\ a | awk '{print $3}')

if [ -f /etc/yggdrasil.iptunnel.conf ]; then
    touch /etc/yggdrasil.iptunnel.conf
fi
IPv6NAT=$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "ipv6tunnel" nat)
if [[ -z "$IPv6NAT" ]]; then
    IPv6NAT=true
    confset "iptunnel" "IPv6nat" "$IPv6NAT" /etc/yggdrasil.iptunnel.conf
fi
EXITNODE=$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "iptunnel" EXIT)

YGGINT="$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "general" yggdrasil-interface)"
if [[ -z "${YGGINT}" ]]; then
    YGGINT="ygg0"
fi

IPv6SUBNETINT="$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "ipv6tunnel" subnet-interface)"
if [[ -z "${IPv6SUBNETINT}" ]]; then
    IPv6SUBNETINT="wlan-ap"
fi

if [ -e /etc/yggdrasil.iptunnel ]; then
   SUBNET4=$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "iptunnel" subnet)
    if [[ -z "${SUBNET4}" ]]; then
        SUBNET4="10.10.0.0/24"
    fi
    SUBNET6=$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "ipv6tunnel" subnet)
#    if [[ -z "${SUBNET6}" ]]; then
#        SUBNET6="fd00::/64"
#        ip -6 route add ${SUBNET6} dev "${YGGINT}"
#    fi
    EXITINT="$(confget -f "/etc/yggdrasil.iptunnel.conf" -s "general" exit-interface)"
    if [[ -z "${EXITINT}" ]]; then
        EXITINT="eth0"
    fi

    INDEX=-1
    while read -r REMOTE_YGG IP_ADDR IP6_ADDR; do
            INDEX=$((INDEX+1))
            GREINT="gre_ygg${INDEX}"
            ifconfig ${GREINT} down || true 
            ip tunnel delete ${GREINT} || true
            ip tunnel add ${GREINT} mode ip6gre remote ${REMOTE_YGG} local ${LOCAL_YGG} ttl 255
	          ip link set ${GREINT} up
            ip addr add $IP_ADDR/30 dev ${GREINT}
#            ip route add $IP_ADDR/30 dev ${GREINT}

            if [[ ! -z "${IP6_ADDR}" ]]; then
                ip addr add $IP6_ADDR/126 dev ${GREINT}
#                ip -6 route add "${IP6_ADDR}/126" dev ${GREINT} || true
            fi
            isIPv6=true
    done < /etc/yggdrasil.iptunnel

    if [ "$EXITNODE" == "true" ]; then

        # If no NAT (masquerading) being done, start doing it
        if [ -z "$(iptables -L POSTROUTING -v -n -t nat  | grep MASQUERADE)" ]; then
            iptables -t nat -A POSTROUTING -o "${EXITINT}" -j MASQUERADE
        fi
        # If no NAT (masquerading) being done, start doing it
        if [ -z "$(ip6tables -L POSTROUTING -v -n -t nat  | grep MASQUERADE)" ]; then
            if [[ ! "${IPv6NAT}" == false ]]; then
                iptables -t nat -A POSTROUTING -o "${EXITINT}" -j MASQUERADE
            fi
        fi
    fi
# Configure as Yggdrasil IPTunnel client if client file is present 
# this is a single line represeting a Yggdrasil public key in /etc/yggdrasil.iptunnel.client
# along with IPAddresses configured on the exit node for this node
fi
    # Remove NAT from eth0 if it exists
    iptables -t nat -D POSTROUTING -o ${GREINT} -j MASQUERADE || true
    ip6tables -t nat -D POSTROUTING -o ${GREINT} -j MASQUERADE || true

    if [ "$EXITNODE" != "true" ]; then

        # Route NAT traffic through to yggdrasil ygg0 interface to use iptunnel exit server
        iptables -t nat -A POSTROUTING -o ${GREINT} -j MASQUERADE
        if [[ ! "${IPv6NAT}" == false ]]; then
            ip6tables -t nat -A POSTROUTING -o ${GREINT} -j MASQUERADE
        fi

        # Special hack to change default route without removing original one
        ip route add 0.0.0.0/1 dev "${GREINT}"
        ip route add 128.0.0.0/1 dev "${GREINT}"

        ip -6 route add ::/1 dev "${GREINT}"
        ip -6 route add 8000::/1 dev "${GREINT}" 
   fi
